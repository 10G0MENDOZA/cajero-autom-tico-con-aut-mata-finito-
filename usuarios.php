<?php
session_start();
header('Content-Type: application/json; charset=utf-8');

// =======================================
// üîπ Estado inicial del saldo del usuario
// =======================================
if (!isset($_SESSION["saldo"])) {
    $_SESSION["saldo"] = 500000; // Saldo inicial de prueba
}

// =======================================
// üîπ Variable que determina la acci√≥n (AFD principal)
// =======================================
$accion = $_GET["accion"] ?? "";
$saldo_minimo = 100; // üí∞ Saldo m√≠nimo que debe quedar en cuenta

// =======================================
// üîπ AFD del RETIRO ‚Äî Controla monto, tipo de dato y saldo m√≠nimo
// =======================================
if ($accion === "retiro") {
    $monto = intval($_GET["monto"]);

    // q0 ‚Üí qError: monto inv√°lido o cero
    if ($monto <= 0) {
        echo json_encode(["error" => "‚ö†Ô∏è El monto debe ser mayor a cero."]);
        exit;
    }

    // q1 ‚Üí qError: monto mayor al saldo
    if ($monto > $_SESSION["saldo"]) {
        echo json_encode(["error" => "‚ùå Fondos insuficientes."]);
        exit;
    }

    // q2 ‚Üí qError: saldo m√≠nimo violado (debe quedar al menos $100)
    if ($_SESSION["saldo"] - $monto < $saldo_minimo) {
        echo json_encode([
            "error" => "‚ö†Ô∏è No se puede realizar el retiro. Debe conservar un saldo m√≠nimo de $" . number_format($saldo_minimo, 0, ",", ".") . "."
        ]);
        exit;
    }

    // q3 ‚Üí Aceptaci√≥n (retiro v√°lido)
    $_SESSION["saldo"] -= $monto;
    echo json_encode([
        "ok" => true,
        "accion" => "retiro",
        "monto" => $monto,
        "saldo" => $_SESSION["saldo"]
    ]);
    exit;
}

// =======================================
// üîπ AFD de TRANSACCI√ìN ‚Äî Controla monto y cuenta destino
// =======================================
if ($accion === "transaccion") {
    $monto = intval($_GET["monto"]);
    $cuenta = $_GET["cuenta"] ?? "";

    // q0 ‚Üí qError: datos vac√≠os
    if ($cuenta === "" || $monto <= 0) {
        echo json_encode(["error" => "‚ö†Ô∏è Debe ingresar una cuenta y un monto v√°lidos."]);
        exit;
    }

    // q1 ‚Üí qError: monto mayor al saldo
    if ($monto > $_SESSION["saldo"]) {
        echo json_encode(["error" => "‚ùå Fondos insuficientes para la transacci√≥n."]);
        exit;
    }

    // q2 ‚Üí Aceptaci√≥n
    $_SESSION["saldo"] -= $monto;
    echo json_encode([
        "ok" => true,
        "accion" => "transaccion",
        "monto" => $monto,
        "saldo" => $_SESSION["saldo"],
        "cuenta" => htmlspecialchars($cuenta)
    ]);
    exit;
}

// =======================================
// üîπ AFD de RECARGA ‚Äî Controla n√∫mero y monto
// =======================================
if ($accion === "recarga") {
    $monto = intval($_GET["monto"]);
    $numero = $_GET["numero"] ?? "";

    // q0 ‚Üí qError: datos inv√°lidos
    if ($numero === "" || $monto <= 0) {
        echo json_encode(["error" => "‚ö†Ô∏è Debe ingresar un n√∫mero de celular y un monto v√°lidos."]);
        exit;
    }

    // q1 ‚Üí qError: monto mayor al saldo
    if ($monto > $_SESSION["saldo"]) {
        echo json_encode(["error" => "‚ùå Fondos insuficientes para la recarga."]);
        exit;
    }

    // q2 ‚Üí Aceptaci√≥n
    $_SESSION["saldo"] -= $monto;
    echo json_encode([
        "ok" => true,
        "accion" => "recarga",
        "monto" => $monto,
        "saldo" => $_SESSION["saldo"],
        "numero" => htmlspecialchars($numero)
    ]);
    exit;
}

// =======================================
// üîπ Si la acci√≥n no coincide con ning√∫n AFD v√°lido
// =======================================
echo json_encode(["error" => "‚ö†Ô∏è Acci√≥n no reconocida por el aut√≥mata."]);
exit;
?>
